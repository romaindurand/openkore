macro start {
  do ai auto
  do move 147 112
  pause 3
  do move 100 22
  do talk 0
  do talk resp 2
  do talk resp 0
  do move 107 107
  do talk 0
  do eq 2
  do eq 3
  do eq 4
  do eq 5
  do eq 6
  do eq 7
  do talk 0
  do talk 1
  do talk resp 0
  do talk 0
  do talk 0
  do talk resp 1
  do talk 0
  do talk 1
  do talk resp 4
  do talk 2
  do talk 3
  do talk 0
  #warp to outside
  do ai manual
  pause 5
  do talknpc 96 30
  do ai auto
  call findPoring
  call useButterflyWing
  do talknpc 96 30
  do ai manual
  do move 107 35
  do ai auto
  do talk 1
  do talk resp 2
  do talk 3
  do talk resp 2
  do talk 4
  do talk resp 2
  do talk 6
  do talk resp 2

  #start quests
  call huntMonsters
  call getTwoEmptyBottle
  call useButterflyWing
  do move 107 35

  do talknpc 97 41
  do talk resp 2

  do talknpc 105 41
  do talk resp 2

  do talknpc 117 41
  do talk resp 2

  do move 107 45
  do talknpc 100 50
  do sell
  $id = @inventory(Empty Bottle)
  do sell $id
  do sell done

  do talknpc 109 41
  do talk resp 2

  #exit training ground
  do move 103 32
  do talknpc 96 30
  do talk resp 1

  #job teleport
  pause 4
  do talk 0
  do talk resp 0
}

macro getTwoEmptyBottle {
  while (@invamount(Empty Bottle) < 2) as emptyBottleLoop
    if (@monster(Drops) != -1 || @monster(Poring) != -1) {
      if (@monster(Poring) != -1) {
        do a @monster(Poring)
      }
      if (@monster(Drops) != -1) {
        do a @monster(Drops)
      }
      log Empty Bottle : @invamount(Empty Bottle)
    } else {
      call randomMove
    }
  end emptyBottleLoop
  log You got two Empty Bottle
}

macro useButterflyWing {
  do stand
  $id = @inventory(Novice Butterfly Wing)
  $id2 = @inventory(Butterfly Wing)
  if ($id != -1) {
    do is $id
  } elsif ($id2 != -1) {
    do is $id2
  }
  pause 2
}

macro huntMonsters {
  $picky = 4
  $lunatic = 7
  $willow = 7
  while ($picky > 0 || $willow > 0 || $lunatic > 0) as killMonstersLoop

    log Quest | Picky $picky | Lunatic $lunatic | Willow $willow
    if (@monster(Willow) != -1 && $willow > 0) {
      do a @monster(Willow)
      $willow--
    }
    if (@monster(Lunatic) != -1 && $lunatic > 0) {
      do a @monster(Lunatic)
      $lunatic--
    }
    if (@monster(Picky) != -1 && $picky > 0) {
      do a @monster(Picky)
      $picky--
    }

    call findMonsters

  end killMonstersLoop

  log All monsters killed !
}

macro findMonsters {
  $shouldTpPicky = 0
  $shouldTpLunatic = 0
  $shouldTpWillow = 0

  log Looking for targets in sight ...


  if (@monster(Picky) == -1) {
    $shouldTpPicky = 1
  }
  if (@monster(Lunatic) == -1) {
    $shouldTpLunatic = 1
  }
  if (@monster(Willow) == -1) {
    $shouldTpWillow = 1
  }



  if ($picky == 0) {
    $shouldTpPicky = 0
  }
  if ($lunatic == 0) {
    $shouldTpLunatic = 0
  }
  if ($willow == 0) {
    $shouldTpWillow = 0
  }

  

  if ($shouldTpPicky == 1 || $shouldTpLunatic == 1 || $shouldTpWillow == 1) {
    log No monster to kill in sight, moving to another location
    call randomMove
  }
}

macro findPoring {
  $isPoring = @monster(Poring)
  if ($isPoring == -1) {
    log No Poring in sight, moving to another location
    call randomMove
    call findPoring
  } else {
    do ai auto
    do a $isPoring
  }
}

macro randomMove {
  $id = @inventory(Novice Fly Wing)
  if ($id == -1) {
    $num = @rand(1, 4)
    do north if ($num == 1)
    do south if ($num == 2)
    do east  if ($num == 3)
    do west  if ($num == 4)
  } else {
    do is $id
    pause 2
  }
}

macro save {
  do ai manual
  do stand
  if ($.map != $saveMap) {
    call useButterflyWing
  }
  $kafraCoords = $kafraX $kafraY
  $kafraX2 = $kafraX
  $kafraX2--
  do move $saveMap
  do move $saveMap $kafraX2 $kafraY
  do talknpc $kafraCoords
  do talk resp 0
  do conf saveMap $saveMap
  do conf sellAuto 1
  do conf sellAuto_npc $sellNpc
  do conf storageAuto 1
  do conf storageAuto_npc $saveMap $kafraCoords
  do ai on
}

macro saveGeffen {
  $saveMap = geffen
  $kafraX = 120
  $kafraY = 62
  $sellNpc = geffen_in 74 144
  call save
}

macro saveIzlude {
  $saveMap = izlude
  $kafraX = 134
  $kafraY = 88
  $sellNpc = izlude_in 115 61
  call save
}

macro savePronteraWest {
  $saveMap = prt_fild05
  $kafraX = 290
  $kafraY = 224
  $sellNpc = prt_fild05 290 221
  call save
}

macro saveAyothaya {
  $saveMap = ayothaya
  $kafraX = 212
  $kafraY = 169
  $sellNpc = ayothaya 203 178
  call save
}

macro savePayon {
  $saveMap = payon
  $kafraX = 181
  $kafraY = 104
  $sellNpc = payon 159 96
  call save
}

macro saveMorocc {
  $saveMap = morocc
  $kafraX = 156
  $kafraY = 97
  $sellNpc = morocc 145 103
  call save
}

macro saveAlberta {
  $saveMap = alberta
  $kafraX = 113
  $kafraY = 60
  $sellNpc = alberta_in 188 21
  call save
}

macro swordman {
  do conf statsAddAuto_list 15 dex, 20 vit, 20 str, 30 agi, 30 dex, 50 agi
  call start
  do talk resp 0
  
  #swordman quest
  pause 2
  do talknpc 74 172
  do talk resp 1
  do talk resp 0

  do conf skillsAddAuto_list SM_RECOVERY 10, SM_SWORD 10
  $id = @inventory(Novice Adventurer Suit [1])
  do eq $id
  $id = @inventory(Novice Falchion [3])
  do eq $id
  do move izlude
  call saveIzlude
  do conf lockMap prt_fild08
  do ai auto
}

macro acolyte {
  do conf statsAddAuto_list 20 dex, 30 int, 30 dex, 50 int
  call start
  do talk resp 1

  #acolyte quest
  pause 2
  do move 184 37
  do talknpc 184 41
  do talk resp 0

  do conf skillsAddAuto_list AL_RUWACH 1, AL_TELEPORT 1, AL_HEAL 10, AL_DP 5, AL_BLESSING 10, AL_INCAGI 10
  $id = @inventory(Novice Adventurer Suit [1])
  do eq $id
  $id = @inventory(Novice Mace [3])
  do eq $id
  do conf useSelf_skill_1 Heal
  do conf useSelf_skill_1_lvl 10
  do conf useSelf_skill_1_hp < 80%
  do conf useSelf_skill_1_sp > 10%
  do conf useSelf_skill_1_stopWhenHit 0

  do move prontera
  do move payon
  call savePayon
  do conf lockMap pay_fild08
}

macro thief {
  do conf statsAddAuto_list 15 dex, 20 agi, 20 str, 30 dex, 50 agi, 30 str, 70 agi
  call start
  do talk resp 2

  #thief quest
  pause 2
  do talknpc 39 129
  do talk resp 0
  do talk resp 0
  do talk resp 0
  do talknpc 42 133

  do conf skillsAddAuto_list TF_MISS 5, TF_DOUBLE 5, TF_MISS 10, TF_DOUBLE 10
  $id = @inventory(Novice Adventurer Suit [1])
  do eq $id
  $id = @inventory(Novice Main Gauche [3])
  do eq $id

  call useButterflyWing
  call saveMorocc
  do conf lockMap moc_fild12
}

macro merchant {
  do conf statsAddAuto_list 15 dex, 20 agi, 20 str, 30 dex, 50 agi, 30 str, 70 agi
  call start
  do talk resp 3
}

macro archer {
  do conf statsAddAuto_list 15 dex, 20 agi, 50 dex, 40 agi, 99 dex
  call start
  do talk resp 4

  #archer quest
  pause 2
  do talknpc 64 71
  do talk resp 0

  do conf skillsAddAuto_list AC_OWL 5, AC_VULTURE 10, AC_OWL 10
  $id = @inventory(Novice Adventurer Suit [1])
  do eq $id
  $id = @inventory(Novice Composite Bow [3])
  do eq $id
  $id = @inventory(Arrow Quiver)
  do is $id

  do conf attackDistance 8
  do conf attackDistanceAuto 1
  do conf attackMaxDistance 8
  do conf buyAuto_1 Arrow
	do conf buyAuto_1_npc morocc 145 103
	do conf buyAuto_1_distance 5
	do conf buyAuto_1_minAmount 50
	do conf buyAuto_1_maxAmount 500
  do conf attackEquip_arrow Arrow

  do move morocc
  call saveMorocc
  do conf lockMap moc_fild11
}

macro mage {
  do conf statsAddAuto_list 15 dex, 50 int, 30 dex, 70 int, 50 dex, 99 int
  call start
  do talk resp 5

  #mage quest
  pause 2
  do talknpc 164 124
  do talk resp 0
  do talk resp 0

  $id = @inventory(Novice Adventurer Suit [1])
  do eq $id
  $id = @inventory(Novice Rod [3])
  do eq $id
  do conf skillsAddAuto_list MG_FIREBOLT 4, MG_SRECOVERY 5, MG_COLDBOLT 5
  do conf sitAuto_sp_lower 20
  do conf sitAuto_sp_upper 95
  do conf attackUseWeapon 0
  do conf attackSkillSlot_1 Fire Bolt
	do conf attackSkillSlot_1_stopWhenHit 1
	do conf attackSkillSlot_1_lvl 4
	do conf attackSkillSlot_1_dist 7..9
	do conf attackSkillSlot_1_sp > 10%

  call useButterflyWing
  call saveGeffen
  do conf lockMap gef_fild04
}

automacro dropAutoTrigger {
  disabled 0
  run-once 1
  weight > 48%
  call {
    if (@config(dropAuto) != 1) {
      log dropAuto is disabled
      stop
    }
    call autoDrop
    release dropAutoTrigger
  }
}

macro autoDrop {
  log Initiating autoDrop sequence ...
  $index = @config(dropAutoIdStart)
  $idStop = @config(dropAutoIdStop)
  do ai manual
  call useButterflyWing
  do move @config(dropAutoLocation)
  while ($index < $idStop) as autoDropLoop
    do drop $index
    $index++
  end autoDropLoop
  do ai auto
}
